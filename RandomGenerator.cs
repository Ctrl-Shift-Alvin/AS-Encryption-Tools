using System;

namespace AlvinSoft {
    /// <summary>Thread-safe class for generating random sequences of bytes and numbers</summary>
    public static class RandomGenerator {
        internal static readonly object Sync = new();
        internal static readonly Random Random = new();
        /// <summary>Shorthand for <c>Next(0, int.MaxValue)</c></summary>
        public static int Next() {
            lock (Sync)
                return Random.Next();
        }

        /// <summary>Returns the next available random int</summary>
        public static int Next(int minInclusive, int maxExclusive) {
            lock (Sync)
                return Random.Next(minInclusive, maxExclusive);
        }

        /// <summary>Fills <paramref name="arrayToFill"/> with random non-zero bytes</summary>
        public static void FillNonZeroBytes(byte[] arrayToFill) {
            lock (Sync)
                Random.NextBytes(arrayToFill);
        }
        /// <summary>Generates a byte array using <c>FillNonZeroBytes(byte[])</c></summary>
        /// <returns>The generated byte array of size <paramref name="size"/></returns>
        public static byte[] GenerateBytes(int size) {
            byte[] buffer = new byte[size];
            FillNonZeroBytes(buffer);
            return buffer;
        }
    }
}
